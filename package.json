{
    "name": "twig-language",
    "displayName": "Twig Language",
    "description": "Snippets, Syntax Highlighting, Hover, and Formatting for Twig",
    "version": "0.8.10",
    "publisher": "mblode",
    "license": "MIT",
    "author": {
        "name": "Matthew Blode",
        "email": "m@blode.co",
        "url": "https://matthewblode.com"
    },
    "homepage": "https://github.com/mblode/vscode-twig-language",
    "bugs": {
        "url": "https://github.com/mblode/vscode-twig-language/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/mblode/vscode-twig-language.git"
    },
    "icon": "images/icon.png",
    "engines": {
        "vscode": "^1.30.0"
    },
    "categories": [
        "Programming Languages",
        "Snippets",
        "Other"
    ],
    "keywords": [
        "php",
        "twig",
        "snippets",
        "craft",
        "beautify"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./extension/index",
    "contributes": {
        "languages": [
            {
                "id": "html",
                "aliases": [
                    "HTML",
                    "twig"
                ],
                "extensions": [
                    ".twig",
                    ".html",
                    ".html.twig"
                ],
                "configuration": "./src/languages/twig.configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "html",
                "scopeName": "text.html.twig",
                "path": "./src/syntaxes/twig.tmLanguage",
                "embeddedLanguages": {
                    "source.json": "json",
                    "source.css": "css",
                    "source.css.scss": "scss",
                    "source.js": "javascript",
                    "source.ts": "typescript"
                }
            }
        ],
        "snippets": [
            {
                "language": "html",
                "path": "./src/snippets/snippets.json"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Twig Language",
            "properties": {
                "twig-language.hover": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to enable/disable Twig hover."
                },
                "twig-language.formatting": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to enable/disable Twig PrettyDiff formatting."
                },
                "twig-language.braceLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true an empty line will be inserted after opening curly braces and before closing curly braces."
                },
                "twig-language.bracePadding": {
                    "type": "boolean",
                    "default": false,
                    "description": "Inserts a space after the start of a container and before the end of the container if the contents of that container are not indented; such as: conditions, function arguments, and escaped sequences of template strings."
                },
                "twig-language.braceStyle": {
                    "type": "string",
                    "enum": [
                        "collapse",
                        "collapse-preserve-inline",
                        "expand",
                        "none"
                    ],
                    "default": "none",
                    "description": "Emulates JSBeautify's brace_style option using existing Pretty Diff options."
                },
                "twig-language.braces": {
                    "type": "boolean",
                    "default": false,
                    "description": "Determines if opening curly braces will exist on the same line as their condition or be forced onto a new line."
                },
                "twig-language.commentLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "If a blank new line should be forced above comments."
                },
                "twig-language.comments": {
                    "type": "boolean",
                    "default": false,
                    "description": "This will determine whether comments should always start at position 0 of each line or if comments should be indented according to the code."
                },
                "twig-language.compressedCss": {
                    "type": "boolean",
                    "default": false,
                    "description": "If CSS should be beautified in a style where the properties and values are minifed for faster reading of selectors."
                },
                "twig-language.correct": {
                    "type": "boolean",
                    "default": false,
                    "description": "Automatically correct some sloppiness in code."
                },
                "twig-language.cssInsertLines": {
                    "type": "boolean",
                    "default": false,
                    "description": "Inserts new line characters between every CSS code block."
                },
                "twig-language.elseLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "If else_line is true then the keyword 'else' is forced onto a new line."
                },
                "twig-language.endComma": {
                    "type": "string",
                    "enum": [
                        "always",
                        "never",
                        "none"
                    ],
                    "default": false,
                    "description": "If there should be a trailing comma in arrays and objects. Value multiline only applies to modes beautify and diff."
                },
                "twig-language.forceAttribute": {
                    "type": "boolean",
                    "default": false,
                    "description": "If all markup attributes should be indented each onto their own line."
                },
                "twig-language.forceIndent": {
                    "type": "boolean",
                    "default": false,
                    "description": "Will force indentation upon all content and tags without regard for the creation of new text nodes."
                },
                "twig-language.formatArray": {
                    "type": "string",
                    "enum": [
                        "default",
                        "indent",
                        "inline"
                    ],
                    "default": "default",
                    "description": "Determines if all array indexes should be indented, never indented, or left to the default."
                },
                "twig-language.formatObject": {
                    "type": "string",
                    "enum": [
                        "default",
                        "indent",
                        "inline"
                    ],
                    "default": "default",
                    "description": "Determines if all object keys should be indented, never indented, or left to the default."
                },
                "twig-language.functionName": {
                    "type": "boolean",
                    "default": false,
                    "description": "If a space should follow a JavaScript function name."
                },
                "twig-language.indentLevel": {
                    "type": "integer",
                    "default": 0,
                    "description": "How much indentation padding should be applied to beautification? This option is internally used for code that requires switching between libraries."
                },
                "twig-language.tabSize": {
                    "type": "integer",
                    "default": 0,
                    "description": "0 will default to the editor's tab size. Stores the number of 'inchar' values to comprise a single indentation."
                },
                "twig-language.methodChain": {
                    "type": "integer",
                    "default": 0,
                    "description": "When to break consecutively chained methods and properties onto separate lines. A negative value disables this option. A value of 0 ensures method chains are never broken."
                },
                "twig-language.neverFlatten": {
                    "type": "boolean",
                    "default": false,
                    "description": "If destructured lists in script should never be flattend."
                },
                "twig-language.newLine": {
                    "type": "boolean",
                    "default": true,
                    "description": "Insert an empty line at the end of output."
                },
                "twig-language.noCaseIndent": {
                    "type": "boolean",
                    "default": false,
                    "description": "If a case statement should receive the same indentation as the containing switch block."
                },
                "twig-language.noLeadZero": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether leading 0s in CSS values immediately preceeding a decimal should be removed or prevented."
                },
                "twig-language.objectSort": {
                    "type": "boolean",
                    "default": false,
                    "description": "Sorts markup attributes and properties by key name in script and style."
                },
                "twig-language.preserve": {
                    "type": "integer",
                    "default": 2,
                    "description": "The maximum number of consecutive empty lines to retain."
                },
                "twig-language.preserveComment": {
                    "type": "boolean",
                    "default": false,
                    "description": "Prevent comment reformatting due to option wrap."
                },
                "twig-language.quoteConvert": {
                    "type": "string",
                    "enum": [
                        "double",
                        "none",
                        "single"
                    ],
                    "default": "none",
                    "description": "If the quotes of script strings or markup attributes should be converted to single quotes or double quotes."
                },
                "twig-language.space": {
                    "type": "boolean",
                    "default": true,
                    "description": "Inserts a space following the function keyword for anonymous functions."
                },
                "twig-language.spaceClose": {
                    "type": "boolean",
                    "default": false,
                    "description": "Markup self-closing tags end will end with ' />' instead of '/>'."
                },
                "twig-language.tagMerge": {
                    "type": "boolean",
                    "default": false,
                    "description": "Allows immediately adjacement start and end markup tags of the same name to be combined into a single self-closing tag."
                },
                "twig-language.tagSort": {
                    "type": "boolean",
                    "default": false,
                    "description": "Sort child items of each respective markup parent element."
                },
                "twig-language.ternaryLine": {
                    "type": "boolean",
                    "default": true,
                    "description": "If ternary operators in JavaScript ? and : should remain on the same line."
                },
                "twig-language.unformatted": {
                    "type": "boolean",
                    "default": false,
                    "description": "If markup tags should have their insides preserved. This option is only available to markup and does not support child tokens that require a different lexer."
                },
                "twig-language.variableList": {
                    "type": "string",
                    "enum": [
                        "each",
                        "list",
                        "none"
                    ],
                    "default": "none",
                    "description": "If consecutive JavaScript variables should be merged into a comma separated list or if variables in a list should be separated."
                },
                "twig-language.vertical": {
                    "type": "boolean",
                    "default": false,
                    "description": "If lists of assignments and properties should be vertically aligned. This option is not used with the markup lexer."
                },
                "twig-language.wrap": {
                    "type": "integer",
                    "default": 0,
                    "description": "Character width limit before applying word wrap. A 0 value disables this option. A negative value concatenates script strings."
                }
            }
        }
    },
    "capabilities": {
        "hoverProvider": "true"
    },
    "scripts": {
        "start": "rollup -c",
        "build": "rollup -c",
        "watch": "rollup -c -w"
    },
    "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.7.2",
        "eslint": "^6.2.2",
        "eslint-config-prettier": "^6.1.0",
        "typescript": "^3.5.3",
        "vscode": "^1.1.36"
    },
    "dependencies": {
        "prettydiff": "^101.2.5",
        "rollup": "^1.20.2",
        "rollup-plugin-babel": "^4.3.3",
        "rollup-plugin-json": "^4.0.0"
    }
}
